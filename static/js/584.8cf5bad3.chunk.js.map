{"version":3,"file":"static/js/584.8cf5bad3.chunk.js","mappings":"8SAEaA,EAAU,mCACVC,EAAW,+BAGXC,EAAmB,mCAAG,oGACRC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,uCAAoDD,IAD5C,cACzBI,EADyB,yBAGxBA,EAASC,KAAKC,SAHU,2CAAH,qDAMnBC,EAAmB,mCAAG,WAAMC,GAAN,uFACRL,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iCAA8CD,EAA9C,iCAA8EQ,EAA9E,gCADQ,cACzBJ,EADyB,yBAGxBA,EAASC,KAAKC,SAHU,2CAAH,sDAMnBG,EAAiB,mCAAG,WAAMC,GAAN,uFACNP,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BS,EAA/B,oBAAkDV,EAAlD,oBADM,cACvBI,EADuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAMjBM,EAAc,mCAAG,WAAMD,GAAN,uFACHP,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BS,EAA/B,4BAA0DV,EAA1D,oBADG,cACpBI,EADoB,yBAGnBA,EAASC,KAAKO,MAHK,2CAAH,sDAMdC,EAAiB,mCAAG,WAAMH,GAAN,uFACNP,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BS,EAA/B,4BAA0DV,EAA1D,2BADM,cACvBI,EADuB,yBAGtBA,EAASC,KAAKC,SAHQ,2CAAH,qD,qIC7B9B,EAAuB,wBAAvB,EAAuD,yBAAvD,EAAyF,0B,SC6BzF,EA1BkB,SAACQ,GAOlB,OACC,kBAAMC,UAAWC,EAAUC,SAPP,SAAAC,GACpBA,EAAMC,iBACN,IAAMC,EAAcF,EAAMG,OAAOC,MAAMC,MACvCT,EAAMG,SAASG,EACf,EAGA,WACC,kBAAOL,UAAWC,EACLQ,KAAK,OAAOC,KAAK,QACjBC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEzB,mBAAQJ,KAAK,SAAST,UAAWC,EAAjC,UACa,yCAIf,E,QCvBD,EAA6B,2BAA7B,EAA+D,qBAA/D,EAA2F,qBAA3F,EAAuH,qB,SCwDvH,EAjDe,WACd,OAA4Ba,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCL,EAAAA,EAAAA,WAAS,GAA3C,eAAOM,EAAP,KAAkBC,EAAlB,KAEMd,EAAQW,EAAaI,IAAI,SAEzBC,EAAS,mCAAG,WAAO9B,GAAP,8EACjB4B,GAAa,GADI,mBAGa7B,EAAAA,EAAAA,IAAoBC,GAHjC,OAGV+B,EAHU,OAIhBR,GAAU,OAAIQ,IAJE,gDAMhBC,QAAQC,IAAR,MANgB,yBAQhBL,GAAa,GARG,4EAAH,sDAmBf,OAPAM,EAAAA,EAAAA,YAAU,WACTX,EAAU,IACNT,GACHgB,EAAUhB,EAEX,GAAE,CAACA,KAGH,iCACC,SAAC,EAAD,CAAWL,SAAU,SAAC0B,GAAD,OAAOT,EAAgB,CAAE1B,MAAOmC,GAAhC,IACpBR,IAAa,0BAAK,SAACS,EAAA,EAAD,MAClBd,EAAOe,OAAS,GAChB,eAAI9B,UAAWC,EAAf,SACEc,EAAOgB,KAAI,SAACC,GACZ,OACC,eAAmBhC,UAAWC,EAA9B,UACC,SAAC,KAAD,CAAMgC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAK,YAAD,OAAclB,IAAkBlB,UAAWC,EAAjF,SACE+B,EAAMtB,MAAQsB,EAAMK,SAFdL,EAAME,GAMhB,MAGF3B,IAAUa,IAAa,0BAAK,cAAGpB,UAAWC,EAAd,2CAI/B,C","sources":["components/API/API.jsx","webpack://goit-react-hw-05-movies/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\nexport const API_KEY = '28e7de8a02a020e11a900cecedfaedb8';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n\n\nexport const fetchTrendingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n    \n    return response.data.results;\n};\n\nexport const fetchSearchedMovies = async input => {\n    const response = await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${input}&page=1&include_adult=false`);\n    \n    return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n\n    return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n\n    return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n\n    return response.data.results;\n};\n\n// const api = {\n// \tfetchTrendingMovies,\n// \tfetchSearchedMovies,\n// \tfetchMovieDetails,\n// \tfetchMovieCast,\n// \tfetchMovieReviews,\n// };\n\n// export default api;\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"Form\":\"Searchbar_Form__Cmaeh\",\"Input\":\"Searchbar_Input__M5lKV\",\"Button\":\"Searchbar_Button__tufiu\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Searchbar.module.css';\n\nconst Searchbar = (props) => {\n\tconst handleSubmit = event => {\n\t\tevent.preventDefault();\n\t\tconst searchInput = event.target.query.value;\n\t\tprops.onSubmit(searchInput);\n\t};\n\n\treturn (\n\t\t<form className={css.Form} onSubmit={handleSubmit}>\n\t\t\t<input className={css.Input}\n                type=\"text\" name=\"query\" \n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Search movies\" \n            />\n\t\t\t<button type=\"submit\" className={css.Button}>\n                <span>Search</span>\n            </button>\n\t\t</form>\n\t);\n};\n\nSearchbar.propTypes = {\n\tonSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;","// extracted by mini-css-extract-plugin\nexport default {\"MoviesList\":\"Movies_MoviesList__3-v3w\",\"Item\":\"Movies_Item__554Gg\",\"Link\":\"Movies_Link__4PD7w\",\"Note\":\"Movies_Note__FnbMW\"};","import React, { useEffect, useState } from \"react\";\nimport { fetchSearchedMovies } from 'components/API/API';\nimport Searchbar from \"components/Searchbar/Searchbar\";\nimport { Link } from \"react-router-dom\";\nimport { useSearchParams } from \"react-router-dom\";\nimport css from './Movies.module.css';\nimport Loader from \"components/Loader/Loader\";\n\nconst Movies = () => {\n\tconst [movies, setMovies] = useState([]);\n\tconst [searchParams, setSearchParams] = useSearchParams();\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tconst query = searchParams.get('input');\n\n\tconst getMovies = async (input) => {\n\t\tsetIsLoading(true);\n\t\ttry {\n\t\t\tconst searchedMovies = await fetchSearchedMovies(input);\n\t\t\tsetMovies([...searchedMovies]);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t} finally {\n\t\t\tsetIsLoading(false);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tsetMovies([]);\n\t\tif (query) {\n\t\t\tgetMovies(query);\n\t\t}\n\t}, [query]);\n\n\treturn (\n\t\t<>\n\t\t\t<Searchbar onSubmit={(e) => setSearchParams({ input: e })}></Searchbar>\n\t\t\t{isLoading && <div><Loader /></div>}\n\t\t\t{movies.length > 0 ? (\n\t\t\t\t<ul className={css.MoviesList}>\n\t\t\t\t\t{movies.map((movie) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={movie.id} className={css.Item}>\n\t\t\t\t\t\t\t\t<Link to={`${movie.id}`} state={{ from: `/movies/?${searchParams}` }} className={css.Link}> \n\t\t\t\t\t\t\t\t\t{movie.name || movie.title}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t) : (\n\t\t\t\tquery && !isLoading && <div><p className={css.Note}>Nothing found. Try again.</p></div>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default Movies;"],"names":["API_KEY","BASE_URL","fetchTrendingMovies","axios","response","data","results","fetchSearchedMovies","input","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews","props","className","css","onSubmit","event","preventDefault","searchInput","target","query","value","type","name","autoComplete","autoFocus","placeholder","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","isLoading","setIsLoading","get","getMovies","searchedMovies","console","log","useEffect","e","Loader","length","map","movie","to","id","state","from","title"],"sourceRoot":""}