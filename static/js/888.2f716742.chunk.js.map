{"version":3,"file":"static/js/888.2f716742.chunk.js","mappings":"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","sources":["components/API/API.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nexport const API_KEY = '28e7de8a02a020e11a900cecedfaedb8';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n\n\nexport const fetchTrendingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n    \n    return response.data.results;\n};\n\nexport const fetchSearchedMovies = async input => {\n    const response = await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${input}&page=1&include_adult=false`);\n    \n    return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n\n    return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n\n    return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n\n    return response.data.results;\n};\n\n// const api = {\n// \tfetchTrendingMovies,\n// \tfetchSearchedMovies,\n// \tfetchMovieDetails,\n// \tfetchMovieCast,\n// \tfetchMovieReviews,\n// };\n\n// export default api;\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"MovieDetails_Container__RyaeD\",\"Link\":\"MovieDetails_Link__ozxnl\",\"DetailContainer\":\"MovieDetails_DetailContainer__0g+uI\",\"Info\":\"MovieDetails_Info__tzBaD\",\"Poster\":\"MovieDetails_Poster__0ttdM\",\"Title\":\"MovieDetails_Title__6S4TL\",\"Overview\":\"MovieDetails_Overview__KZakk\",\"Genres\":\"MovieDetails_Genres__rEGSS\",\"AdditionalInfoContainer\":\"MovieDetails_AdditionalInfoContainer__ARW2J\",\"AdditionalHeader\":\"MovieDetails_AdditionalHeader__5fIk2\",\"LinkName\":\"MovieDetails_LinkName__5w5oI\",\"List\":\"MovieDetails_List__-3HyV\",\"Item\":\"MovieDetails_Item__qAC0n\"};","import { useState, useEffect, Suspense } from 'react';\nimport { Link, Outlet, NavLink } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { fetchMovieDetails} from '../API/API';\nimport Loader from \"components/Loader/Loader\";\nimport Notiflix from 'notiflix';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState({\n        title: '',\n        release_date: '',\n        vote_average: '',\n        overview: '',\n        genres: [],\n    });\n  \n    const [imgUrl, setImgUrl] = useState('');\n    const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w300';\n\n\n    const getDetails = async () => {\n        try {\n          let movie = await fetchMovieDetails(movieId);\n          setMovie(movie);\n          setImgUrl(`${IMAGE_BASE_URL}/${movie.poster_path}`);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    useEffect(() => {\n        getDetails();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []); \n\n    const location = useLocation();\n    const backHref = location.state?.from ?? '/movies';\n\n    if(!movie) {\n        Notiflix.Notify.failure('It is impossible to get detailed data right now!');\n        return <Loader />;\n    } else {\n        return (\n            <div className={css.Container}>\n                <NavLink to={backHref} className={css.Link}> ‚Üê GO BACK</NavLink>\n\n                <div className={css.DetailsContainer}>\n                    <img className={css.Poster} src={imgUrl} alt=\"movie poster\" />\n                    <div className={css.Info}>\n                        <h2 className={css.Title}> {movie.title} ({movie.release_date.slice(0, 4)})</h2>\n                        <p className={css.Paragraph}> User score: {Number.parseFloat(movie.vote_average * 10).toFixed(0)}%</p>\n                        <h3 className={css.Overview}>Overview</h3>\n                        <p className={css.Paragraph}>{movie.overview}</p>\n                        <h4 className={css.Genres}>Genres</h4>\n                        <p className={css.Paragraph}>{movie.genres.map(genre => genre.name).join(', ')}</p>\n                    </div>\n                </div>\n                <div className={css.AdditionalInfoContainer}>\n                    <h4 className={css.AdditionalHeader}>Additional information</h4>\n                    <ul className={css.List}>\n                        <li className={css.Item}>\n                            <Link to=\"cast\" className={css.LinkName} state={{ from: backHref }}>\n                                Cast\n                            </Link>\n                        </li>\n                        <li className={css.Item}>\n                            <Link to=\"reviews\" className={css.LinkName} state={{ from: backHref }}>\n                                Reviews\n                            </Link>\n                        </li>\n                    </ul>\n                    <Suspense fallback={<Loader />}>\n                        <Outlet />\n                    </Suspense>\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default MovieDetails;"],"names":["API_KEY","BASE_URL","fetchTrendingMovies","axios","response","data","results","fetchSearchedMovies","input","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews","useParams","useState","title","release_date","vote_average","overview","genres","movie","setMovie","imgUrl","setImgUrl","getDetails","poster_path","console","log","useEffect","backHref","useLocation","state","from","className","css","to","src","alt","slice","Number","parseFloat","toFixed","map","genre","name","join","Suspense","fallback","Loader","Notiflix"],"sourceRoot":""}